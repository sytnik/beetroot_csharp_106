@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<MudThemeProvider Theme="_theme" @bind-isdarkmode="_isDark"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank"/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank"/>
        <MudToggleIconButton Toggled="_isDark" Icon="@Icons.Material.Outlined.Stars"
                             ToggledIcon="@Icons.Material.Outlined.Cloud"
                             ToggledChanged="OnToggle">
        </MudToggleIconButton>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">BlazorApplication</MudText>
        </MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    MudTheme _theme = new();
    bool _isDark = false;
    bool _drawerOpen = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        var value = await JSRuntime
            .InvokeAsync<string>("localStorage.getItem", "mudBlazor.theme");
        if (value != null)
        {
            _isDark = bool.Parse(value);
            StateHasChanged();
        }
    }

    void DrawerToggle() => _drawerOpen = !_drawerOpen;

    private async Task OnToggle()
    {
        _isDark = !_isDark;
        await JSRuntime.InvokeVoidAsync("localStorage.setItem",
            "mudBlazor.theme", _isDark.ToString().ToLower());
    }

}